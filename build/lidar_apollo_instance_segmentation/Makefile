# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.22

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/sws/autoware/src/universe/autoware.universe/perception/lidar_apollo_instance_segmentation

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/sws/autoware/build/lidar_apollo_instance_segmentation

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target test
test:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running tests..."
	/usr/bin/ctest --force-new-ctest-process $(ARGS)
.PHONY : test

# Special rule for the target test
test/fast: test
.PHONY : test/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
	/usr/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Available install components are: \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Install the project..."
	/usr/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing only the local directory..."
	/usr/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Installing the project stripped..."
	/usr/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# The main all target
all: cmake_check_build_system
	$(CMAKE_COMMAND) -E cmake_progress_start /home/sws/autoware/build/lidar_apollo_instance_segmentation/CMakeFiles /home/sws/autoware/build/lidar_apollo_instance_segmentation//CMakeFiles/progress.marks
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/sws/autoware/build/lidar_apollo_instance_segmentation/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named uninstall

# Build rule for target.
uninstall: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 uninstall
.PHONY : uninstall

# fast build rule for target.
uninstall/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/uninstall.dir/build.make CMakeFiles/uninstall.dir/build
.PHONY : uninstall/fast

#=============================================================================
# Target rules for targets named lidar_apollo_instance_segmentation_uninstall

# Build rule for target.
lidar_apollo_instance_segmentation_uninstall: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 lidar_apollo_instance_segmentation_uninstall
.PHONY : lidar_apollo_instance_segmentation_uninstall

# fast build rule for target.
lidar_apollo_instance_segmentation_uninstall/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation_uninstall.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation_uninstall.dir/build
.PHONY : lidar_apollo_instance_segmentation_uninstall/fast

#=============================================================================
# Target rules for targets named tensorrt_apollo_cnn_lib

# Build rule for target.
tensorrt_apollo_cnn_lib: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 tensorrt_apollo_cnn_lib
.PHONY : tensorrt_apollo_cnn_lib

# fast build rule for target.
tensorrt_apollo_cnn_lib/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/tensorrt_apollo_cnn_lib.dir/build.make CMakeFiles/tensorrt_apollo_cnn_lib.dir/build
.PHONY : tensorrt_apollo_cnn_lib/fast

#=============================================================================
# Target rules for targets named lidar_apollo_instance_segmentation

# Build rule for target.
lidar_apollo_instance_segmentation: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 lidar_apollo_instance_segmentation
.PHONY : lidar_apollo_instance_segmentation

# fast build rule for target.
lidar_apollo_instance_segmentation/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation.dir/build
.PHONY : lidar_apollo_instance_segmentation/fast

#=============================================================================
# Target rules for targets named lidar_apollo_instance_segmentation_node

# Build rule for target.
lidar_apollo_instance_segmentation_node: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 lidar_apollo_instance_segmentation_node
.PHONY : lidar_apollo_instance_segmentation_node

# fast build rule for target.
lidar_apollo_instance_segmentation_node/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation_node.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation_node.dir/build
.PHONY : lidar_apollo_instance_segmentation_node/fast

lib/src/TrtNet.o: lib/src/TrtNet.cpp.o
.PHONY : lib/src/TrtNet.o

# target to build an object file
lib/src/TrtNet.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/tensorrt_apollo_cnn_lib.dir/build.make CMakeFiles/tensorrt_apollo_cnn_lib.dir/lib/src/TrtNet.cpp.o
.PHONY : lib/src/TrtNet.cpp.o

lib/src/TrtNet.i: lib/src/TrtNet.cpp.i
.PHONY : lib/src/TrtNet.i

# target to preprocess a source file
lib/src/TrtNet.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/tensorrt_apollo_cnn_lib.dir/build.make CMakeFiles/tensorrt_apollo_cnn_lib.dir/lib/src/TrtNet.cpp.i
.PHONY : lib/src/TrtNet.cpp.i

lib/src/TrtNet.s: lib/src/TrtNet.cpp.s
.PHONY : lib/src/TrtNet.s

# target to generate assembly for a file
lib/src/TrtNet.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/tensorrt_apollo_cnn_lib.dir/build.make CMakeFiles/tensorrt_apollo_cnn_lib.dir/lib/src/TrtNet.cpp.s
.PHONY : lib/src/TrtNet.cpp.s

rclcpp_components/node_main_lidar_apollo_instance_segmentation_node.o: rclcpp_components/node_main_lidar_apollo_instance_segmentation_node.cpp.o
.PHONY : rclcpp_components/node_main_lidar_apollo_instance_segmentation_node.o

# target to build an object file
rclcpp_components/node_main_lidar_apollo_instance_segmentation_node.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation_node.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation_node.dir/rclcpp_components/node_main_lidar_apollo_instance_segmentation_node.cpp.o
.PHONY : rclcpp_components/node_main_lidar_apollo_instance_segmentation_node.cpp.o

rclcpp_components/node_main_lidar_apollo_instance_segmentation_node.i: rclcpp_components/node_main_lidar_apollo_instance_segmentation_node.cpp.i
.PHONY : rclcpp_components/node_main_lidar_apollo_instance_segmentation_node.i

# target to preprocess a source file
rclcpp_components/node_main_lidar_apollo_instance_segmentation_node.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation_node.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation_node.dir/rclcpp_components/node_main_lidar_apollo_instance_segmentation_node.cpp.i
.PHONY : rclcpp_components/node_main_lidar_apollo_instance_segmentation_node.cpp.i

rclcpp_components/node_main_lidar_apollo_instance_segmentation_node.s: rclcpp_components/node_main_lidar_apollo_instance_segmentation_node.cpp.s
.PHONY : rclcpp_components/node_main_lidar_apollo_instance_segmentation_node.s

# target to generate assembly for a file
rclcpp_components/node_main_lidar_apollo_instance_segmentation_node.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation_node.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation_node.dir/rclcpp_components/node_main_lidar_apollo_instance_segmentation_node.cpp.s
.PHONY : rclcpp_components/node_main_lidar_apollo_instance_segmentation_node.cpp.s

src/cluster2d.o: src/cluster2d.cpp.o
.PHONY : src/cluster2d.o

# target to build an object file
src/cluster2d.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation.dir/src/cluster2d.cpp.o
.PHONY : src/cluster2d.cpp.o

src/cluster2d.i: src/cluster2d.cpp.i
.PHONY : src/cluster2d.i

# target to preprocess a source file
src/cluster2d.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation.dir/src/cluster2d.cpp.i
.PHONY : src/cluster2d.cpp.i

src/cluster2d.s: src/cluster2d.cpp.s
.PHONY : src/cluster2d.s

# target to generate assembly for a file
src/cluster2d.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation.dir/src/cluster2d.cpp.s
.PHONY : src/cluster2d.cpp.s

src/debugger.o: src/debugger.cpp.o
.PHONY : src/debugger.o

# target to build an object file
src/debugger.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation.dir/src/debugger.cpp.o
.PHONY : src/debugger.cpp.o

src/debugger.i: src/debugger.cpp.i
.PHONY : src/debugger.i

# target to preprocess a source file
src/debugger.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation.dir/src/debugger.cpp.i
.PHONY : src/debugger.cpp.i

src/debugger.s: src/debugger.cpp.s
.PHONY : src/debugger.s

# target to generate assembly for a file
src/debugger.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation.dir/src/debugger.cpp.s
.PHONY : src/debugger.cpp.s

src/detector.o: src/detector.cpp.o
.PHONY : src/detector.o

# target to build an object file
src/detector.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation.dir/src/detector.cpp.o
.PHONY : src/detector.cpp.o

src/detector.i: src/detector.cpp.i
.PHONY : src/detector.i

# target to preprocess a source file
src/detector.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation.dir/src/detector.cpp.i
.PHONY : src/detector.cpp.i

src/detector.s: src/detector.cpp.s
.PHONY : src/detector.s

# target to generate assembly for a file
src/detector.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation.dir/src/detector.cpp.s
.PHONY : src/detector.cpp.s

src/feature_generator.o: src/feature_generator.cpp.o
.PHONY : src/feature_generator.o

# target to build an object file
src/feature_generator.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation.dir/src/feature_generator.cpp.o
.PHONY : src/feature_generator.cpp.o

src/feature_generator.i: src/feature_generator.cpp.i
.PHONY : src/feature_generator.i

# target to preprocess a source file
src/feature_generator.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation.dir/src/feature_generator.cpp.i
.PHONY : src/feature_generator.cpp.i

src/feature_generator.s: src/feature_generator.cpp.s
.PHONY : src/feature_generator.s

# target to generate assembly for a file
src/feature_generator.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation.dir/src/feature_generator.cpp.s
.PHONY : src/feature_generator.cpp.s

src/feature_map.o: src/feature_map.cpp.o
.PHONY : src/feature_map.o

# target to build an object file
src/feature_map.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation.dir/src/feature_map.cpp.o
.PHONY : src/feature_map.cpp.o

src/feature_map.i: src/feature_map.cpp.i
.PHONY : src/feature_map.i

# target to preprocess a source file
src/feature_map.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation.dir/src/feature_map.cpp.i
.PHONY : src/feature_map.cpp.i

src/feature_map.s: src/feature_map.cpp.s
.PHONY : src/feature_map.s

# target to generate assembly for a file
src/feature_map.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation.dir/src/feature_map.cpp.s
.PHONY : src/feature_map.cpp.s

src/log_table.o: src/log_table.cpp.o
.PHONY : src/log_table.o

# target to build an object file
src/log_table.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation.dir/src/log_table.cpp.o
.PHONY : src/log_table.cpp.o

src/log_table.i: src/log_table.cpp.i
.PHONY : src/log_table.i

# target to preprocess a source file
src/log_table.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation.dir/src/log_table.cpp.i
.PHONY : src/log_table.cpp.i

src/log_table.s: src/log_table.cpp.s
.PHONY : src/log_table.s

# target to generate assembly for a file
src/log_table.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation.dir/src/log_table.cpp.s
.PHONY : src/log_table.cpp.s

src/node.o: src/node.cpp.o
.PHONY : src/node.o

# target to build an object file
src/node.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation.dir/src/node.cpp.o
.PHONY : src/node.cpp.o

src/node.i: src/node.cpp.i
.PHONY : src/node.i

# target to preprocess a source file
src/node.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation.dir/src/node.cpp.i
.PHONY : src/node.cpp.i

src/node.s: src/node.cpp.s
.PHONY : src/node.s

# target to generate assembly for a file
src/node.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/lidar_apollo_instance_segmentation.dir/build.make CMakeFiles/lidar_apollo_instance_segmentation.dir/src/node.cpp.s
.PHONY : src/node.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... list_install_components"
	@echo "... rebuild_cache"
	@echo "... test"
	@echo "... lidar_apollo_instance_segmentation_uninstall"
	@echo "... uninstall"
	@echo "... lidar_apollo_instance_segmentation"
	@echo "... lidar_apollo_instance_segmentation_node"
	@echo "... tensorrt_apollo_cnn_lib"
	@echo "... lib/src/TrtNet.o"
	@echo "... lib/src/TrtNet.i"
	@echo "... lib/src/TrtNet.s"
	@echo "... rclcpp_components/node_main_lidar_apollo_instance_segmentation_node.o"
	@echo "... rclcpp_components/node_main_lidar_apollo_instance_segmentation_node.i"
	@echo "... rclcpp_components/node_main_lidar_apollo_instance_segmentation_node.s"
	@echo "... src/cluster2d.o"
	@echo "... src/cluster2d.i"
	@echo "... src/cluster2d.s"
	@echo "... src/debugger.o"
	@echo "... src/debugger.i"
	@echo "... src/debugger.s"
	@echo "... src/detector.o"
	@echo "... src/detector.i"
	@echo "... src/detector.s"
	@echo "... src/feature_generator.o"
	@echo "... src/feature_generator.i"
	@echo "... src/feature_generator.s"
	@echo "... src/feature_map.o"
	@echo "... src/feature_map.i"
	@echo "... src/feature_map.s"
	@echo "... src/log_table.o"
	@echo "... src/log_table.i"
	@echo "... src/log_table.s"
	@echo "... src/node.o"
	@echo "... src/node.i"
	@echo "... src/node.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

